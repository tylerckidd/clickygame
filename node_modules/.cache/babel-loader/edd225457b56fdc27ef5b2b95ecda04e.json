{"ast":null,"code":"var _jsxFileName = \"/Users/tylerkidd/Homework/clickygame/clicky/src/App.js\";\nimport React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport FriendCard from \"./components/FriendCard\";\nimport Footer from \"./components/Footer\";\nimport Flower from \"./Flower.json\";\nimport './App.css'; //sets state to 0 or empty\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Flower,\n      clickedFlower: [],\n      score: 0\n    };\n\n    this.imageClick = event => {\n      const currentFlower = event.target.alt;\n      const FlowerAlreadyClicked = this.state.clickedFlower.indexOf(currentFlower) > -1; //if you click on a Flower that has already been selected, the game is reset and cards reordered\n\n      if (FlowerAlreadyClicked) {\n        this.setState({\n          Flower: this.state.Flower.sort(function (a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedFlower: [],\n          score: 0\n        });\n        alert(\"You lose. Play again?\"); //if you click on an available FclickedFlower, your score is increased and cards reordered\n      } else {\n        this.setState({\n          Flower: this.state.Flower.sort(function (a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedFlower: this.state.clickedFlower.concat(currentFlower),\n          score: this.state.score + 1\n        }, //if you get all 12 fish corrent you get a congrats message and the game resets        \n        () => {\n          if (this.state.score === 12) {\n            alert(\"Yay! You Win!\");\n            this.setState({\n              fish: this.state.Flower.sort(function (a, b) {\n                return 0.5 - Math.random();\n              }),\n              clickedFlower: [],\n              score: 0\n            });\n          }\n        });\n      }\n    };\n  }\n\n  //the order of components to be rendered: navbar, jumbotron, friendcard, footer \n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      score: this.state.score,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.Flower.map(Flower => React.createElement(FriendCard, {\n      imageClick: this.imageClick,\n      id: Flower.id,\n      key: Flower.id,\n      image: Flower.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tylerkidd/Homework/clickygame/clicky/src/App.js"],"names":["React","Component","Navbar","Jumbotron","FriendCard","Footer","Flower","App","state","clickedFlower","score","imageClick","event","currentFlower","target","alt","FlowerAlreadyClicked","indexOf","setState","sort","a","b","Math","random","alert","concat","fish","render","map","id","image"],"mappings":"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","sourcesContent":["\nimport React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport FriendCard from \"./components/FriendCard\";\nimport Footer from \"./components/Footer\";\nimport Flower from \"./Flower.json\";\nimport './App.css';\n\n//sets state to 0 or empty\nclass App extends Component {\n  state = {\n    Flower,\n    clickedFlower: [],\n    score: 0\n  };\n\n//when you click on a card ... the Flower is taken out of the array\n  imageClick = event => {\n    const currentFlower = event.target.alt;\n    const FlowerAlreadyClicked =\n      this.state.clickedFlower.indexOf(currentFlower) > -1;\n\n//if you click on a Flower that has already been selected, the game is reset and cards reordered\n    if (FlowerAlreadyClicked) {\n      this.setState({\n        Flower: this.state.Flower.sort(function(a, b) {\n          return 0.5 - Math.random();\n        }),\n        clickedFlower: [],\n        score: 0\n      });\n        alert(\"You lose. Play again?\");\n\n//if you click on an available FclickedFlower, your score is increased and cards reordered\n    } else {\n      this.setState(\n        {\n          Flower: this.state.Flower.sort(function(a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedFlower: this.state.clickedFlower.concat(\n            currentFlower\n          ),\n          score: this.state.score + 1\n        },\n//if you get all 12 fish corrent you get a congrats message and the game resets        \n        () => {\n          if (this.state.score === 12) {\n            alert(\"Yay! You Win!\");\n            this.setState({\n              fish: this.state.Flower.sort(function(a, b) {\n                return 0.5 - Math.random();\n              }),\n              clickedFlower: [],\n              score: 0\n            });\n          }\n        }\n      );\n    }\n  };\n\n//the order of components to be rendered: navbar, jumbotron, friendcard, footer \n  render() {\n    return (\n      <div>\n        <Navbar \n          score={this.state.score}\n        />\n        <Jumbotron />\n        <div className=\"wrapper\">\n          {this.state.Flower.map(Flower => (\n            <FriendCard\n              imageClick={this.imageClick}\n              id={Flower.id}\n              key={Flower.id}\n              image={Flower.image}\n            />\n          ))}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}